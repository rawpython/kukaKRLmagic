&ACCESS  RV
DEFDAT  $CONFIG
;FOLD BASISTECH GLOBALS
;==================================
; Default parameters for movement
; These values shouldn't be changed
;==================================

;----------------------------------
; general MOVEMENT - parameters:
;----------------------------------

INT DEF_OV_PRO=100
INT DEF_ADVANCE=3

; PTP - MOVEMENTS
;----------------------------------
INT DEF_VEL_PTP=100 ; ptp velocity [%]
INT DEF_ACC_PTP=50 ; ptp acceleration [%]

; CP - MOVEMENTS                                                 
;----------------------------------
DECL CIRC_TYPE DEF_CIRC_TYP=#BASE
DECL JERK_STRUC DEF_JERK_STRUC={CP 500.000,ORI 50000.0,AX {A1 1000.00,A2 1000.00,A3 1000.00,A4 1000.00,A5 1000.00,A6 1000.00,E1 1000.00,E2 1000.00,E3 1000.00,E4 1000.00,E5 1000.00,E6 1000.00}} ; jerk value for the spline. CP: [m/Sec3], ORI: [[GRAD/Sec3], AX: [[GRAD/Sec3] (rotatory) resp. [m/Sec3] (linear)
REAL DEF_GEAR_JERK=100.000 ; gear jerk of axes [%]
REAL DEF_VEL_CP=2.00000 ; path velocity [M/SEC]
REAL DEF_VEL_ORI1=200.000 ; swivel velocity [GRAD/Sec]
REAL DEF_VEL_ORI2=200.000 ; rotation velocity [GRAD/Sec]
REAL DEF_VEL_ORIS=200.000 ; spline swivel velocity [GRAD/Sec]
REAL DEF_ACC_CP=2.30000 ; path acceleration [m/Sec2]
REAL DEF_ACC_ORI1=100.000 ; swivel acceleration [GRAD/Sec2]
REAL DEF_ACC_ORI2=100.000 ; rotation acceleration [GRAD/Sec2]
REAL DEF_ACC_ORIS=200.000 ; spline swivel acceleration [GRAD/Sec2]
REAL DEF_VEL_FACT=1.00000
REAL DEF_ACC_SPTP=100.000 ; ptp spline acceleration [%]

; APO - parameters
;--------------------------------
INT DEF_APO_CPTP=50 ; PTP-Approximation [%]
INT DEF_APO_CVEL=100 ; Speed-Approximation [%]
REAL DEF_APO_CDIS=3.00000 ; Distance-Approximation [mm]
REAL DEF_APO_CORI=5.00000 ; Orientation-Approximation [Grad]
REAL DEF_APO_CORIS=80.0000 ; spline Orientation-Approximation [Grad]

;==================================
; Structures:
;==================================
ENUM BAS_COMMAND INITMOV,ACC_CP,ACC_PTP,VEL_CP,VEL_PTP,ACC_GLUE,TOOL,BASE,EX_BASE,PTP_DAT,CP_DAT,OUT_SYNC,OUT_ASYNC,GROUP,FRAMES,PTP_PARAMS,CP_PARAMS
ENUM OUT_MODETYPE TRIGGER_,CONT_,STOP_
ENUM IPO_M_T NONE,TCP,BASE
ENUM APO_MODE_T CPTP,CDIS
STRUC DIG_OUT_TYPE INT FIRST_BIT,LENGTH,PARITY,CODING
STRUC CTRL_IN_T INT IN_NR,CHAR NAME_NAT[20]
STRUC CTRL_OUT_T INT OUT_NR,BOOL INI,CHAR NAME_NAT[20]
STRUC FCT_OUT_T INT NO,REAL PULS_TIME,BOOL STATE
STRUC FCT_IN_T INT NO,BOOL STATE
STRUC PDAT REAL VEL,ACC,APO_DIST,APO_MODE_T APO_MODE,REAL GEAR_JERK,INT EXAX_IGN
STRUC LDAT REAL VEL,ACC,APO_DIST,APO_FAC,AXIS_VEL,AXIS_ACC,ORI_TYPE ORI_TYP,CIRC_TYPE CIRC_TYP,REAL JERK_FAC,GEAR_JERK,INT EXAX_IGN,CIRC_MODE CB
STRUC FDAT INT TOOL_NO,BASE_NO,IPO_MODE IPO_FRAME,CHAR POINT2[24],BOOL TQ_STATE
STRUC ODAT INT OUT_NO,BOOL STATE,REAL PULSE_TIME,OUT_MODETYPE OUT_MODE,REAL TIME_DELAY,OFFSET
STRUC BASIS_SUGG_T CHAR POINT1[24],POINT2[24],CP_PARAMS[24],PTP_PARAMS[24],CONT[24],CP_VEL[24],PTP_VEL[24],SYNC_PARAMS[24],SPL_NAME[24],A_PARAMS[24],PC_SYNCSTRING[24],GL_SYNCSTRING[24]

STRUC OUT_SUGG_T CHAR PARAMS[24]
STRUC MACHINE_DEF_T CHAR NAME[39],INT COOP_KRC_INDEX,CHAR PARENT[24],FRAME ROOT,ESYS MECH_TYPE,CHAR GEOMETRY[255]
STRUC MACHINE_TOOL_T INT MACH_DEF_INDEX,CHAR PARENT[24],CHAR GEOMETRY[255]
STRUC MACHINE_FRAME_T INT MACH_DEF_INDEX,CHAR PARENT[24],CHAR GEOMETRY[255]

STRUC TRIGGER_PARA INT TriggerPath,BOOL TriggerOnStart,INT TriggerDelay,CHAR TriggerTask[40]
STRUC CONSTVEL_PARA INT ConstVelTyp,INT ConstVelPath,BOOL ConstVelOnStart
STRUC CONDSTOP_PARA INT CondStopPath,BOOL CondStopOnStart,CHAR StopCondition[40]
STRUC ADAT TRIGGER_PARA TriggerPara,CONSTVEL_PARA ConstVelPara,CONDSTOP_PARA CondStopPara

STRUC MODULEPARAM_T CHAR PARAMS[2000]
STRUC TRACECACHE_T CHAR NAME[64],INT ACT_ITER,INT MAX_ITER

;FOLD OLD TORQUE MONITORING - Do not remove! Needed to prevent syntax errors in old user modules!
STRUC TM_SUGG_T CHAR TM_ID[24]
STRUC TQM_TQDAT_T INT T11,T12,T13,T14,T15,T16,T21,T22,T23,T24,T25,T26,K1,K2,K3,K4,K5,K6,O1,O2,ID,OVM,REAL TMF
;ENDFOLD
;==================================
; External declarations:
;==================================
EXT  BAS (BAS_COMMAND  :IN,REAL  :IN )
EXT  IR_STOPM ( )

;====================
; Signal declarations
; Do not change !!!!!
;====================
SIGNAL CHANNEL_1 $ANOUT[1]
SIGNAL CHANNEL_2 $ANOUT[2]
SIGNAL CHANNEL_3 $ANOUT[3]
SIGNAL CHANNEL_4 $ANOUT[4]
SIGNAL CHANNEL_5 $ANOUT[5]
SIGNAL CHANNEL_6 $ANOUT[6]
SIGNAL CHANNEL_7 $ANOUT[7]
SIGNAL CHANNEL_8 $ANOUT[8]
SIGNAL CHANNEL_9 $ANOUT[9]
SIGNAL CHANNEL_10 $ANOUT[10]
SIGNAL CHANNEL_11 $ANOUT[11]
SIGNAL CHANNEL_12 $ANOUT[12]
SIGNAL CHANNEL_13 $ANOUT[13]
SIGNAL CHANNEL_14 $ANOUT[14]
SIGNAL CHANNEL_15 $ANOUT[15]
SIGNAL CHANNEL_16 $ANOUT[16]
SIGNAL CHANNEL_17 $ANOUT[17]
SIGNAL CHANNEL_18 $ANOUT[18]
SIGNAL CHANNEL_19 $ANOUT[19]
SIGNAL CHANNEL_20 $ANOUT[20]
SIGNAL CHANNEL_21 $ANOUT[21]
SIGNAL CHANNEL_22 $ANOUT[22]
SIGNAL CHANNEL_23 $ANOUT[23]
SIGNAL CHANNEL_24 $ANOUT[24]
SIGNAL CHANNEL_25 $ANOUT[25]
SIGNAL CHANNEL_26 $ANOUT[26]
SIGNAL CHANNEL_27 $ANOUT[27]
SIGNAL CHANNEL_28 $ANOUT[28]
SIGNAL CHANNEL_29 $ANOUT[29]
SIGNAL CHANNEL_30 $ANOUT[30]
SIGNAL CHANNEL_31 $ANOUT[31]
SIGNAL CHANNEL_32 $ANOUT[32]

;==================================
; ID external user log-on:
;==================================
SIGNAL ExtUserID $IN[1026]  TO $IN[1026]
SIGNAL ExtUserIDWatchDog $IN[1026]

;==================================
; Variables:
;==================================
DECL PDAT PDEFAULT={VEL 100.000,ACC 100.000,APO_DIST 100.000,GEAR_JERK 100.000,EXAX_IGN 0}
DECL LDAT LDEFAULT={VEL 2.00000,ACC 100.000,APO_DIST 100.000,APO_FAC 50.0000,AXIS_VEL 100.000,AXIS_ACC 100.000,ORI_TYP #VAR,CIRC_TYP #BASE,JERK_FAC 50.0000,GEAR_JERK 100.000,EXAX_IGN 0}
DECL LDAT CDEFAULT={CB {AUX_PT {ORI #CONSIDER,E1 #CONSIDER,E2 #CONSIDER,E3 #CONSIDER,E4 #CONSIDER,E5 #CONSIDER,E6 #CONSIDER},TARGET_PT {ORI #INTERPOLATE,E1 #INTERPOLATE,E2 #INTERPOLATE,E3 #INTERPOLATE,E4 #INTERPOLATE,E5 #INTERPOLATE,E6 #INTERPOLATE}}}
DECL FDAT FDEFAULT={TOOL_NO 1,BASE_NO 0,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
DECL FDAT FHOME={TOOL_NO 1,BASE_NO 0,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
DECL ODAT ODEFAULT={OUT_NO 1,STATE TRUE,PULSE_TIME 0.0,OUT_MODE #STOP_,TIME_DELAY 0.0,OFFSET 0.0}

DECL ADAT TDEFAULT={TriggerPara {TriggerPath 0,TriggerOnStart FALSE,TriggerDelay 0,TriggerTask[] " "}}
DECL ADAT CVDEFAULT={ConstVelPara {ConstVelTyp 0,ConstVelPath 0,ConstVelOnStart FALSE}}
DECL ADAT CSDEFAULT={CondStopPara {CondStopPath 0,CondStopOnStart FALSE,StopCondition[] " "}}

DECL PDAT PDAT_ACT
DECL LDAT LDAT_ACT
DECL FDAT FDAT_ACT
DECL ODAT ODAT_ACT
DECL INT ACT_FILTER
DECL INT ACT_DELAY
DECL INT ACT_DISTANCE

DECL CHAR SPL_NAME[24]

;GROUP-Definitions
;----------------------------------
INT COMPL_GROUP='B0001'

INT DEF_GROUP[10]
DEF_GROUP[1]='B1111' ; complete
DEF_GROUP[2]='B0001' ; robot only
DEF_GROUP[3]='B0011' ; robot and track
DEF_GROUP[4]='B0111' ; robot, track and ext. axis2
DEF_GROUP[5]='B1011' ; robot, track and ext. axis3
DEF_GROUP[6]='B1111' ; robot, track and ext. axis2+3
DEF_GROUP[7]='B1111' ; complete
DEF_GROUP[8]='B1111' ; complete
DEF_GROUP[9]='B1111' ; complete
DEF_GROUP[10]='B1111' ; complete

INT $ACT_GROUP='B0001'

; HOME POSITION
;----------------------------------
E6AXIS XHOME={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS XHOME1={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS XHOME2={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS XHOME3={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS XHOME4={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS XHOME5={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}

; REFERENCE POINTS
;----------------------------------
DECL FRAME REF_PT[16]
REF_PT[1]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[2]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[3]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[4]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[5]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[6]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[7]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[8]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[9]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[10]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[11]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[12]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[13]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[14]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[15]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
REF_PT[16]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}

FRAME REF_TOOL={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}

; TOOL and BASE data
;----------------------------------
BOOL AUTO_IPO_M=FALSE
BOOL STOPM_FLAG=FALSE
BOOL TOOL_CORR_ON=FALSE
BOOL TOOL_CORR_W_ON=FALSE
BOOL BASE_CORR_ON=FALSE
BOOL M_BAS_COR_ON=FALSE
FRAME TOOL_CORR={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
FRAME TOOL_CORR_W={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
FRAME BASE_CORR={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
FRAME M_BASE_CORR={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
INT COR_TOOL_NO=0

INT MAX_TOOL=16
DECL FRAME TOOL_DATA[16]
TOOL_DATA[1]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[2]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[3]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[4]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[5]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[6]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[7]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[8]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[9]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[10]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[11]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[12]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[13]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[14]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[15]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
TOOL_DATA[16]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}

DECL CHAR TOOL_NAME[16,24]
TOOL_NAME[1,]=" "
TOOL_NAME[2,]=" "
TOOL_NAME[3,]=" "
TOOL_NAME[4,]=" "
TOOL_NAME[5,]=" "
TOOL_NAME[6,]=" "
TOOL_NAME[7,]=" "
TOOL_NAME[8,]=" "
TOOL_NAME[9,]=" "
TOOL_NAME[10,]=" "
TOOL_NAME[11,]=" "
TOOL_NAME[12,]=" "
TOOL_NAME[13,]=" "
TOOL_NAME[14,]=" "
TOOL_NAME[15,]=" "
TOOL_NAME[16,]=" "

DECL LOAD LOAD_DATA[16]
LOAD_DATA[1]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[2]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[3]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[4]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[5]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[6]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[7]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[8]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[9]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[10]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[11]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[12]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[13]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[14]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[15]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
LOAD_DATA[16]={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}

DECL IPO_M_T TOOL_TYPE[16]
TOOL_TYPE[1]=#NONE
TOOL_TYPE[2]=#NONE
TOOL_TYPE[3]=#NONE
TOOL_TYPE[4]=#NONE
TOOL_TYPE[5]=#NONE
TOOL_TYPE[6]=#NONE
TOOL_TYPE[7]=#NONE
TOOL_TYPE[8]=#NONE
TOOL_TYPE[9]=#NONE
TOOL_TYPE[10]=#NONE
TOOL_TYPE[11]=#NONE
TOOL_TYPE[12]=#NONE
TOOL_TYPE[13]=#NONE
TOOL_TYPE[14]=#NONE
TOOL_TYPE[15]=#NONE
TOOL_TYPE[16]=#NONE

DECL LOAD LOAD_A1_DATA={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
DECL LOAD LOAD_A2_DATA={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}
DECL LOAD LOAD_A3_DATA={M -1.00000,CM {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},J {X 0.0,Y 0.0,Z 0.0}}

INT MAX_BASE=32
DECL FRAME BASE_DATA[32]
BASE_DATA[1]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[2]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[3]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[4]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[5]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[6]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[7]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[8]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[9]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[10]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[11]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[12]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[13]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[14]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[15]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[16]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[17]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[18]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[19]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[20]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[21]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[22]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[23]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[24]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[25]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[26]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[27]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[28]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[29]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[30]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[31]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}
BASE_DATA[32]={X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0}

DECL CHAR BASE_NAME[32,24]
BASE_NAME[1,]=" "
BASE_NAME[2,]=" "
BASE_NAME[3,]=" "
BASE_NAME[4,]=" "
BASE_NAME[5,]=" "
BASE_NAME[6,]=" "
BASE_NAME[7,]=" "
BASE_NAME[8,]=" "
BASE_NAME[9,]=" "
BASE_NAME[10,]=" "
BASE_NAME[11,]=" "
BASE_NAME[12,]=" "
BASE_NAME[13,]=" "
BASE_NAME[14,]=" "
BASE_NAME[15,]=" "
BASE_NAME[16,]=" "
BASE_NAME[17,]=" "
BASE_NAME[18,]=" "
BASE_NAME[19,]=" "
BASE_NAME[20,]=" "
BASE_NAME[21,]=" "
BASE_NAME[22,]=" "
BASE_NAME[23,]=" "
BASE_NAME[24,]=" "
BASE_NAME[25,]=" "
BASE_NAME[26,]=" "
BASE_NAME[27,]=" "
BASE_NAME[28,]=" "
BASE_NAME[29,]=" "
BASE_NAME[30,]=" "
BASE_NAME[31,]=" "
BASE_NAME[32,]=" "

DECL IPO_M_T BASE_TYPE[32]
BASE_TYPE[1]=#NONE
BASE_TYPE[2]=#NONE
BASE_TYPE[3]=#NONE
BASE_TYPE[4]=#NONE
BASE_TYPE[5]=#NONE
BASE_TYPE[6]=#NONE
BASE_TYPE[7]=#NONE
BASE_TYPE[8]=#NONE
BASE_TYPE[9]=#NONE
BASE_TYPE[10]=#NONE
BASE_TYPE[11]=#NONE
BASE_TYPE[12]=#NONE
BASE_TYPE[13]=#NONE
BASE_TYPE[14]=#NONE
BASE_TYPE[15]=#NONE
BASE_TYPE[16]=#NONE
BASE_TYPE[17]=#NONE
BASE_TYPE[18]=#NONE
BASE_TYPE[19]=#NONE
BASE_TYPE[20]=#NONE
BASE_TYPE[21]=#NONE
BASE_TYPE[22]=#NONE
BASE_TYPE[23]=#NONE
BASE_TYPE[24]=#NONE
BASE_TYPE[25]=#NONE
BASE_TYPE[26]=#NONE
BASE_TYPE[27]=#NONE
BASE_TYPE[28]=#NONE
BASE_TYPE[29]=#NONE
BASE_TYPE[30]=#NONE
BASE_TYPE[31]=#NONE
BASE_TYPE[32]=#NONE

;******************************************
; Variables for CELL DEFINITION
;******************************************

INT MAX_MACHINES=16
DECL MACHINE_DEF_T MACHINE_DEF[16]
MACHINE_DEF[1]={NAME[] "KR 120 R2700-2",COOP_KRC_INDEX 1,PARENT[] "WORLD",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #ROBOT,GEOMETRY[] "ObjectId = -345794209"}
MACHINE_DEF[2]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[3]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[4]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[5]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[6]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[7]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[8]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[9]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[10]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[11]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[12]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[13]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[14]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[15]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}
MACHINE_DEF[16]={NAME[] " ",COOP_KRC_INDEX 0,PARENT[] " ",ROOT {X 0.0,Y 0.0,Z 0.0,A 0.0,B 0.0,C 0.0},MECH_TYPE #NONE,GEOMETRY[] " "}

DECL MACHINE_TOOL_T MACHINE_TOOL_DAT[16]
MACHINE_TOOL_DAT[1]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[2]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[3]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[4]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[5]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[6]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[7]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[8]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[9]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[10]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[11]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[12]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[13]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[14]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[15]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_TOOL_DAT[16]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}

DECL MACHINE_FRAME_T MACHINE_FRAME_DAT[32]
MACHINE_FRAME_DAT[1]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[2]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[3]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[4]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[5]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[6]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[7]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[8]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[9]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[10]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[11]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[12]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[13]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[14]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[15]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[16]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[17]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[18]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[19]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[20]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[21]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[22]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[23]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[24]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[25]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[26]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[27]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[28]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[29]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[30]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[31]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}
MACHINE_FRAME_DAT[32]={MACH_DEF_INDEX 0,PARENT[] " ",GEOMETRY[] " "}

;******************************************
; Variables for axis CALIBRATING
;******************************************
DECL INT CAL_AXIS
BOOL CONST_SPEED

;******************************************
; Variables for added TechPackages
;******************************************
INT POWER

;******************************************
; General purpose return value of functions
; like INVERSE, FORWARD
;******************************************
INT ERR_STATUS=-1

;******************************************
; Variables for TOUCHUP user limit 
;******************************************
BOOL UM_TOUCHUP=FALSE
REAL CARTESIAN_TOL=5.00000
REAL ROTATION_ANGLE=10.0000
REAL EXTAX_TOL[6]
EXTAX_TOL[1]=10.0000
EXTAX_TOL[2]=10.0000
EXTAX_TOL[3]=10.0000
EXTAX_TOL[4]=10.0000
EXTAX_TOL[5]=10.0000
EXTAX_TOL[6]=10.0000

;******************************************
; Variables for Displaying and Konfiguring
;******************************************
DECL INT I[20]

I[1]=0
I[2]=0
I[3]=0
I[4]=0
I[5]=0
I[6]=0
I[7]=0
I[8]=0
I[9]=0
I[10]=0
I[11]=0
I[12]=0
I[13]=0
I[14]=0
I[15]=0
I[16]=0
I[17]=0
I[18]=0
I[19]=0
I[20]=0

;******************************************
; Variables for Tracing
;******************************************
DECL TRACECACHE_T TRACE_CACHE[10]
TRACE_CACHE[1]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[2]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[3]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[4]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[5]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[6]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[7]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[8]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[9]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}
TRACE_CACHE[10]={NAME[] " ",ACT_ITER 0,MAX_ITER 1}

DECL INT TraceOverflowIndex=1

;******************************************
; all for InterBus Mapping on optional segments
;******************************************

DECL INT IBUS_SEGMENT[16]
IBUS_SEGMENT[1]=0
IBUS_SEGMENT[2]=0
IBUS_SEGMENT[3]=0
IBUS_SEGMENT[4]=0
IBUS_SEGMENT[5]=0
IBUS_SEGMENT[6]=0
IBUS_SEGMENT[7]=0
IBUS_SEGMENT[8]=0
IBUS_SEGMENT[9]=0
IBUS_SEGMENT[10]=0
IBUS_SEGMENT[11]=0
IBUS_SEGMENT[12]=0
IBUS_SEGMENT[13]=0
IBUS_SEGMENT[14]=0
IBUS_SEGMENT[15]=0
IBUS_SEGMENT[16]=0

;******************************************
; Reduction factors
;******************************************
DECL REAL RedVelExAx[6]
RedVelExAx[1]=100.000
RedVelExAx[2]=100.000
RedVelExAx[3]=100.000
RedVelExAx[4]=100.000
RedVelExAx[5]=100.000
RedVelExAx[6]=100.000
DECL REAL RedAccExAx[6]
RedAccExAx[1]=100.000
RedAccExAx[2]=100.000
RedAccExAx[3]=100.000
RedAccExAx[4]=100.000
RedAccExAx[5]=100.000
RedAccExAx[6]=100.000

;******************************************
; Joint offset
;******************************************
STRUC JOINT_DEVICE_T CHAR NAME[39],REAL OFFSET,INT AXIS_INDEX
DECL JOINT_DEVICE_T JOINT_DEVICE[32]
JOINT_DEVICE[1]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[2]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[3]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[4]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[5]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[6]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[7]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[8]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[9]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[10]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[11]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[12]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[13]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[14]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[15]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[16]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[17]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[18]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[19]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[20]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[21]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[22]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[23]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[24]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[25]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[26]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[27]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[28]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[29]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[30]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[31]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}
JOINT_DEVICE[32]={NAME[] " ",OFFSET 0.0,AXIS_INDEX -1}

DECL INT JOINT_DEVICE_INDEX[32]
JOINT_DEVICE_INDEX[1]=-1
JOINT_DEVICE_INDEX[2]=-1
JOINT_DEVICE_INDEX[3]=-1
JOINT_DEVICE_INDEX[4]=-1
JOINT_DEVICE_INDEX[5]=-1
JOINT_DEVICE_INDEX[6]=-1
JOINT_DEVICE_INDEX[7]=-1
JOINT_DEVICE_INDEX[8]=-1
JOINT_DEVICE_INDEX[9]=-1
JOINT_DEVICE_INDEX[10]=-1
JOINT_DEVICE_INDEX[11]=-1
JOINT_DEVICE_INDEX[12]=-1
JOINT_DEVICE_INDEX[13]=-1
JOINT_DEVICE_INDEX[14]=-1
JOINT_DEVICE_INDEX[15]=-1
JOINT_DEVICE_INDEX[16]=-1
JOINT_DEVICE_INDEX[17]=-1
JOINT_DEVICE_INDEX[18]=-1
JOINT_DEVICE_INDEX[19]=-1
JOINT_DEVICE_INDEX[20]=-1
JOINT_DEVICE_INDEX[21]=-1
JOINT_DEVICE_INDEX[22]=-1
JOINT_DEVICE_INDEX[23]=-1
JOINT_DEVICE_INDEX[24]=-1
JOINT_DEVICE_INDEX[25]=-1
JOINT_DEVICE_INDEX[26]=-1
JOINT_DEVICE_INDEX[27]=-1
JOINT_DEVICE_INDEX[28]=-1
JOINT_DEVICE_INDEX[29]=-1
JOINT_DEVICE_INDEX[30]=-1
JOINT_DEVICE_INDEX[31]=-1
JOINT_DEVICE_INDEX[32]=-1
BOOL bJointOffsetHasBeenSet=FALSE
INT iLastAxisNo=0

ENUM TIMER_ACTIONTYPE TimerStart,TimerStop,TimeOut
BOOL EasyTeachKeepOriWarning=FALSE
INT EasyTeachKeepOriHandle=0
;ENDFOLD (BASISTECH GLOBALS)
;FOLD AUTOEXT GLOBALS
;==================================
; Structures:
;==================================
ENUM FUNCT_TYPE PGNO_GET,PGNO_ACKN,PGNO_FAULT
ENUM P00_COMMAND INIT_EXT,EXT_PGNO,CHK_HOME,EXT_ERR

STRUC SPS_PROG_TYPE INT PROG_NR,CHAR PROG_NAME[12]
;==================================
; External declarations:
;==================================
EXT  P00 (P00_COMMAND  :IN,FUNCT_TYPE  :IN,CHAR [] :OUT,INT  :IN )
;External declaration  for  Submit controlled AutoExt
EXT  P00_SUBM (P00_COMMAND  :IN,FUNCT_TYPE  :IN )

;==================================
; Variables:
;==================================
; Variables for internal
; Communication:
;----------------------------------
BOOL ERROR_FLAG
BOOL CHECK_HOME=TRUE
BOOL PROG_CONTROL=FALSE
DECL CHAR PRO_NAME1_L[8]
PRO_NAME1_L[]="        "
DECL CHAR PRO_NAME1_A[8]
PRO_NAME1_A[]="        "

INT PGNO=0 ;copy of ext. pgno
INT PGNO_ERROR=0 ;transmission error
INT PGNO_TYPE=1 ;coding type of ext. pgno
INT REFLECT_PROG_NR=0 ; enable mirroring of program number inputs (1=enabled, 0=disabled)

; Variables for External 
; Communication: I/O-Interface
;----------------------------------
INT PGNO_FBIT=33 ;first bit of ext. pgno input $IN[]
INT PGNO_FBIT_REFL=999 ;first bit of ext. pgno reflection output $OUT[]
INT PGNO_LENGTH=8 ;length of ext. pgno (max. 16)
INT PGNO_PARITY=41 ;parity bit of ext. pgno
INT PGNO_REQ=33 ;request ext. pgno input
INT PGNO_VALID=42 ;validate ext. pgno input
INT APPL_RUN=34 ;application program is running output
INT ERR_TO_PLC=35 ;error output to PLC
INT P01_STEP
INT CHK_STEP
INT PGNO_FLAG

; Table for assign SPS program number to program name
INT MAX_SPS_PROG=12
DECL SPS_PROG_TYPE SPS_PROG[12]
SPS_PROG[1]={PROG_NR 1,PROG_NAME[] "HP01()    "}
SPS_PROG[2]={PROG_NR 2,PROG_NAME[] "HP02()    "}
SPS_PROG[3]={PROG_NR 3,PROG_NAME[] "HP03()    "}
SPS_PROG[4]={PROG_NR 4,PROG_NAME[] "HP04()    "}
SPS_PROG[5]={PROG_NR 5,PROG_NAME[] "HP05()    "}
SPS_PROG[6]={PROG_NR 6,PROG_NAME[] "HP06()    "}
SPS_PROG[7]={PROG_NR 7,PROG_NAME[] "HP07()    "}
SPS_PROG[8]={PROG_NR 8,PROG_NAME[] "HP08()    "}
SPS_PROG[9]={PROG_NR 9,PROG_NAME[] "HP09()    "}
SPS_PROG[10]={PROG_NR 10,PROG_NAME[] "HP10()    "}
SPS_PROG[11]={PROG_NR 62,PROG_NAME[] "HP62()    "}
SPS_PROG[12]={PROG_NR 63,PROG_NAME[] "HP63()    "}
DECL CHAR TMPNAME[128]
TMPNAME[]="                                "
;ENDFOLD (AUTOEXT GLOBALS)
;FOLD BackupManagerConfig
BOOL BM_ENABLED
INT BM_OUTPUTVALUE
SIGNAL BM_OutputSignal $OUT[4095]  TO $OUT[4096]
SIGNAL BM_InputSignal $IN[1026]  TO $IN[1026]
;ENDFOLD BackupManagerConfig
;FOLD Conveyor
DECL INT CONV_PART_NBR[16]
CONV_PART_NBR[1]=0
CONV_PART_NBR[2]=0
CONV_PART_NBR[3]=0
CONV_PART_NBR[4]=0
CONV_PART_NBR[5]=0
CONV_PART_NBR[6]=0
CONV_PART_NBR[7]=0
CONV_PART_NBR[8]=0
CONV_PART_NBR[9]=0
CONV_PART_NBR[10]=0
CONV_PART_NBR[11]=0
CONV_PART_NBR[12]=0
CONV_PART_NBR[13]=0
CONV_PART_NBR[14]=0
CONV_PART_NBR[15]=0
CONV_PART_NBR[16]=0

ENUM CONV_MODE_TYPE Absolute,Relative
DECL CONV_MODE_TYPE ActualConveyorMode=#Relative
;ENDFOLD Conveyor
;FOLD USER GLOBALS
;*******************************************
;Make your modifications -ONLY- here
;*******************************************

;Scambio dati previsto tra robot e plc
;                   Robot        PLC
;Heartbeat                  < >          ;forse non serve, c'e' diagnostica profinet?
;Motor ON                   < -
;Move enable                < -
;Sistema ON/OFF             < -
;Sistema auto/maint         < -
;Livello allarme            < -
;Stato robot                - >
;Allarmi robot              - >
;Ack robot alarms           < -
;Robot in zona sicura       - >
;Bassa temperatura          < -
;Linea in produzione        < -           ;info per iniziare riscaldamento
;Riscaldamento attivo       - >
;Start ciclo                < -
;Start Rimarcatura          < -           ;?
;Comandi ciclo automatico   < -           ;PULIZIA
;Comandi manuali            < -           ;CALIBRAZIONE, PULIZIA, MANUTENZIONE, CALIB LASER TOOL
;O_START_PROFILE_ACQ        - >           ;comando inizio scansione, permane a 1 durante scansione, il PLC attiva il laser e la bufferizzazione valori
;Trasmissione profilo       < -           ;bit trasmissione in corso
;Laser meas frequency        ?           ;decidere chi deve detenere questo parametro
;Vel scansione               ?           ;decidere chi deve detenere questo parametro
;Indice misura              < -
;Indice misura copiata      - >
;CRC misure                 < -
;Vel marcatura               ?
;Inizio stampa              - >           ;permane a 1 durante stampa
;Attiva lama aria           - >
;Apri otturatore            - >           ;a 0 sarebbe chiudi otturatore
;Otturatore aperto          < -
;Otturatore chiuso          < -
;Comando vortex             - >
;Comando lama d'aria        - >
;DM362x enabled             < -
;Trigger DM362x             - >
;Command head wash          - >
;Command shot test          - > 




;==================================
; Userdefined Types 
;==================================
;tramite PROFINET
SIGNAL I_GENERAL_EMG_OK $IN[1025] ; general emergency ok
SIGNAL I_EMG_RESET $IN[1026] ;reset rele' emergenza da Danieli
SIGNAL I_SEQUENCE_LOCK $IN[1026]
SIGNAL I_LINE_MODE_DAN $IN[1025] ;line mode of Danieli Automation. 0:manual - 1:automatic
SIGNAL I_GENERAL_BYPASS $IN[1026] ; interblocco inserito
SIGNAL I_COMPRESSED_AIR_LINE $IN[1025] ; 0:not ok - 1:ok
SIGNAL I_START_MARK $IN[1026] ;Pipes layer presence at the marking station ;mettere in AND con I_LINE_MODE_DAN
SIGNAL I_MANUAL_START $IN[1026] ;Forzatura marcatura con linea produzione in manuale ;mettere in NOT AND con I_LINE_MODE_DAN

SIGNAL O_EMG_RESET $OUT[1026] ;comando verso il rele' di emergenza per il reset

;external start
;robot error reset
;move enable
SIGNAL I_PRODUCTION_LINE_ON $IN[1025] ;segnale di produzione attiva, permette di avviare il riscaldamento
SIGNAL I_ACKNOWLEDGE_ALARMS $IN[1026] ;comando riconoscimento allarmi
SIGNAL I_ENABLE_CODE_READING $IN[1026] ;quando abilitato, il sistema effettua la lettura codici a fine ciclo

SIGNAL O_SYSTEM_READY $OUT[1026] ;Sistema pronto
SIGNAL O_SAFETY_PLACE $OUT[1026] ;Robot in zona sicura
SIGNAL O_MOTOR_ON $OUT[1026] ;Lampada motor on
SIGNAL O_MAINTENANCE_MODE $OUT[2] ;Sistema in manutenzione

;tramite PROFISAFE
SIGNAL I_NO_EMERGENCY $IN[1025] ;no emergenza estarna
SIGNAL I_OPERATOR_SAFETY_OK $IN[1025]
SIGNAL O_NO_EMERGENCY $OUT[1025] ;marcatrice non in emergenza


;SEGNALI interni della marcatrice
;spare
SIGNAL I_AUTO $IN[2] ; Sistema in AUTOMATICO
SIGNAL I_TEMP_NOT_LOW $IN[3] ;temperatura >10 gradi
;spare
;spare
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;spare
SIGNAL I_AIR_PRESSURE_OK $IN[9]
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;spare
;spare
;spare
;spare
;spare
;spare
;spare
;spare
;spare
;spare

SIGNAL sysHeartbeatPartner $IN[1025]  TO $IN[1026] ;heartbeat from the partner

;=============================
;OUTPUT LIST
;=============================
SIGNAL O_ALARM $OUT[1] ;Lampada Allarme
;spare
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;dichiarato in sds7000.dat
;spare
;dichiarato in sds7000.dat
;spare
;spare
;spare



;ENDFOLD (INPUT/OUTPUT)


;FOLD POSIZIONI
;=============================
;TOOL E POSIZIONI
;=============================
E6AXIS POS_PARK={A1 -35.0000,A2 -63.0000,A3 87.0000,A4 0.0,A5 66.0000,A6 40.0000,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS POS_MAINT={A1 -35.0000,A2 -63.0000,A3 104.000,A4 0.0,A5 -46.0000,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6AXIS POS_CALIBRAZIONE={A1 0.0,A2 -90.0000,A3 90.0000,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
E6POS POS_INIZIO_PULIZIA={X 330.000,Y 1915.00,Z 505.000,A 90.0000,B 90.0000,C 0.0}
E6POS POS_FINE_PULIZIA={X 756.000,Y 1917.00,Z 505.000,A 90.0000,B 90.0000,C 0.0}
E6AXIS POS_CHIUSO={A1 0.0,A2 -121.690,A3 149.380,A4 0.0,A5 60.2100,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}

;ENDFOLD (BUFFER DI MARCATURA)
;FOLD STRUTTURE 
;=============================
;STRUTTURE
;=============================


;ENDFOLD (STRUTTURE)
;FOLD VARIABILI
;=============================
;VARIABILI
;=============================
INT NUMEROPASSATEPULIZIA=3
BOOL BSISTEMA_IN_MANUTENZIONE=FALSE
INT RETURN_VALUE=0 ;variable used to calculate the return path

;to robot
BOOL sysON=FALSE ;status ON of the system
BOOL sysCycleEnabled=FALSE ;status cycle enabling flag 
BOOL cmdGoClean=FALSE ;cmd to go clean
BOOL cmdMotorOn=FALSE ;the cmd to trigger motor on
BOOL cmdRemark=FALSE ;cmd to perform a remark cycle
INT sysAlarmLevel=2 ;1-low 2-medium 3-high < still unknown if it will be the robot that will manage alarms or the PLC

;from robot
INT sysRobotState=0 ;cycle status of the robot 
INT sysRobotFlags=1024 ;status flags from the robot. It would be better to unpack these bits
INT sysHeartbeatRobot=12254 ;heartbeat from the robot
INT sysCycleTime=0 ;cycle time
BOOL sysCycleResult=FALSE ;result of the last cycle

;=============================
;COSTANTI
;=============================
;Marking System Cycle Phase
INT RBT_STATE_UNDEFINED=0
INT RBT_STATE_PARK=1
INT RBT_STATE_LAYER_SCAN=2
INT RBT_STATE_MARKING=3
INT RBT_STATE_READING=4
INT RBT_STATE_CLEANING=5
INT RBT_STATE_CALIBRATION=6
INT RBT_STATE_MAINT_POS=7
INT RBT_STATE_RETURN_PARK=8
INT RBT_STATE_WARMUP=9

;ENDFOLD (VARIABILI)

;ENDFOLD (USER GLOBALS)
ENDDAT
