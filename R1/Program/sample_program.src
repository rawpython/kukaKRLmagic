&ACCESS RVP
&PARAM EDITMASK = *
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
DEF sample_program( )
E6POS my_frame[14]
BOOL potato
INT i
INT values[3]
CHAR string[3,20]

    BAS(#INITMOV, 0)
    $VEL.CP = 1.0
    $ACC.CP = 2.3
    $ADVANCE = 3

    PTP $AXIS_ACT

    $BASE = $NULLFRAME 
    $TOOL = $NULLFRAME

    $timer[1] = 0
    $timer_stop[1] = false
    
    switch i
    case 1
        print('1')
    case 2
        print('2')
    case 3
        print('3')
    case 4
        print('4')
    case 5
        print('5')
    default
        print('0')
    endswitch

    print("geometric addition operation:")

    print({X 10, Y 20, Z 30, A 0, B 0, C 0}:{X 1, Y 2, Z 3, A 10, B 20, C 30})
    print({X 10, Y 20, Z 30, A 90, B 0, C 0}:{X 1, Y 2, Z 3, A 10, B 20, C 30})
    print({X 10, Y 20, Z 30, A 0, B 90, C 0}:{X 1, Y 2, Z 3, A 10, B 20, C 30})
    print({X 10, Y 20, Z 30, A 0, B 0, C 90}:{X 1, Y 2, Z 3, A 10, B 20, C 30})
    print({X 10, Y 20, Z 30, A 90, B 90, C 90}:{X 1, Y 2, Z 3, A 10, B 20, C 30})
    print(testVariableGlobal)
    testVariableGlobal = SampleFuncGlobal()
    print(testVariableGlobal)
    halt
    string[1,] = "potato"
    string[2,] = "pizza"
    string[3,] = "pepperoni"

    interrupt decl 110 when potato==true do print_interrupt()
    interrupt on 110
    values[1] = 1
    values[2] = 2
    values[3] = 3
    for i=1 to 3
        print("value")
        print(values[i])
        potato = NOT potato
        if potato then
            print("potato is true")
        else
            print("potato is false")
        endif
    endfor

    ;$load={M 26.272, CM {FRAME: X 53.320, Y -55.070, Z -123.161, A 0.0, B 0.0, C 0.0}, J {INERTIA: X 0.748942, Y 0.541485, Z 0.873667}}
    interrupt off 110
    print("timer:" + str($timer[1]))
    my_frame[1] = {X 880.000,Y -373.000,Z 70.000,A 0.000,B 0.000,C 4.000}
    print(my_frame[1].Y)
    my_frame[2] = {X 880.000,Y -300.178,Z 75.092,A 0.000,B 0.000,C 4.000}

    i = 0
    while i<10
        i = i + 1
    endwhile

    my_frame[3] = {X 880.000,Y -227.356,Z 80.184,A 0.000,B 0.000,C 4.000}
    my_frame[4] = {X 880.000,Y -154.533,Z 85.277,A 0.000,B 0.000,C 4.000}
    
    i = 0
    repeat
        i = i + 1
    until i > 10

    my_frame[5] = {X 880.000,Y -81.711,Z 90.369,A 0.000,B 0.000,C 4.000}
    my_frame[6] = {X 880.000,Y -8.889,Z 95.461,A 0.000,B 0.000,C 4.000}
    my_frame[7] = {X 880.000,Y 63.933,Z 100.553,A 0.000,B 0.000,C 4.000}
    my_frame[8] = {X 880.000,Y 136.755,Z 105.646,A 0.000,B 0.000,C 4.000}
    my_frame[9] = {X 880.000,Y 209.577,Z 110.738,A 0.000,B 0.000,C 4.000}
    my_frame[10] = {X 880.000,Y 282.400,Z 115.830,A 0.000,B 0.000,C 4.000}
    my_frame[11] = {X 880.000,Y 355.222,Z 120.922,A 0.000,B 0.000,C 4.000}

    my_frame[12] = {X 880.000,Y -308.258,Z 74.527,A 0.000,B 0.000,C 4.000}
    my_frame[13] = {X 880.000,Y -35.923,Z 93.571,A 0.000,B 0.000,C 4.000}
    my_frame[14] = {X 880.000,Y 236.412,Z 112.614,A 0.000,B 0.000,C 4.000}
    
    loop

        PTP {A1 0, A2 -90, A3 90, A4 0, A5 90, A6 0}

        move(my_frame[1], 73)
        move(my_frame[2], 73)
        move(my_frame[3], 73)
        move(my_frame[4], 73)
        move(my_frame[5], 73)
        move(my_frame[6], 73)
        move(my_frame[7], 73)
        move(my_frame[8], 73)
        move(my_frame[9], 73)
        move(my_frame[10], 73)
        move(my_frame[11], 73)

        move(my_frame[12], 275)
        move(my_frame[13], 275)
        move(my_frame[14], 275)
    
    endloop
    
END

def print_interrupt()
    print("interrupt")
    resume
end

DEF move(FRAME_LOCAL:IN, DIAMETER:IN)
E6POS FRAME_LOCAL
REAL DIAMETER
E6POS pstart, pend
E6POS tool_operation

    print(FRAME_LOCAL.Y)
    
    tool_operation = {X -70.000,Y 0.000,Z 332.000,A 0.000,B 0.000,C 0.000}

    pstart = {X 200.000,Y 0.000,Z 0,A -180.000,B 0.000,C -180.000}
    pend = {X 1700.000,Y 0.000,Z 0,A 180.000,B 0.000,C 180.000}
    
    ;corsa accelerazione
    pstart.X = pstart.X - 220
    
    pstart.z = DIAMETER + 15
    pend.z = DIAMETER + 15
    
      
    $TOOL = tool_operation
    $BASE = FRAME_LOCAL
    
    $VEL.CP = 1.0
    $ACC.CP = 2.3
    LIN pstart
    $TOOL = tool_operation
    LIN pend
    
END