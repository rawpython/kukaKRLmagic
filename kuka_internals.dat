;https://openkuka.github.io/krl/reference/system.types/
GLOBAL ENUM CIRC_TYPE BASE, PATH
GLOBAL ENUM ORI_TYPE VAR, CONSTANT, JOINT
GLOBAL STRUC E6POS REAL X, Y, Z, A, B, C, E1, E2, E3, E4, E5, E6, INT S, T
GLOBAL STRUC POS REAL X, Y, Z, A, B, C, INT S, T
GLOBAL STRUC FRAME REAL X, Y, Z, A, B, C
GLOBAL STRUC E6AXIS REAL A1, A2, A3, A4, A5, A6, E1, E2, E3, E4, E5, E6
GLOBAL STRUC AXIS REAL A1, A2, A3, A4, A5, A6

;the followings are referenced in $operate.dat
DECL INT CALL_STACK
DEF DELETE_BACKWARD_BUFFER ( )
END
DEFFCT  INT INTERIMENERGY(STRVAR[256] :IN)
ENDFCT
DEFFCT  INT DIAG_START(PAR :OUT,OPT :OUT)
ENDFCT
DEFFCT  INT DIAG_STOP()
ENDFCT
DEFFCT  EDIAGSTATE GET_DIAGSTATE()
ENDFCT
DEFFCT  BOOL GETSYSSTATE(CMD[64] :IN,IPAR :OUT,RPAR :OUT)
ENDFCT
DEFFCT  BOOL IS_KEY_PRESSED(KEY :IN)
ENDFCT
DEFFCT  CHAR GETCYCDEF(INDEX :IN)
ENDFCT
DEFFCT  CHAR GET_DECL_PLACE(VARNAME[80] :IN)
ENDFCT
DEFFCT  INT CHECKPIDONRDC()
ENDFCT
DEFFCT  RW_RDC_FILE PIDTORDC(STRVAR[470] :IN)
ENDFCT
DEFFCT  RW_RDC_FILE DELETE_PID_ON_RDC()
ENDFCT
DEFFCT  RW_RDC_FILE CAL_TO_RDC()
ENDFCT
DEFFCT  RW_MAM_FILE SET_MAM_ON_HD(VALUES :IN)
ENDFCT
DEFFCT  RW_MAM_FILE COPY_MAM_HD_TO_RDC()
ENDFCT
DEFFCT  RW_RDC_FILE CREATE_RDC_ARCHIVE()
ENDFCT
DEFFCT  RW_RDC_FILE RESTORE_RDC_ARCHIVE()
ENDFCT
DEFFCT  RW_RDC_FILE DELETE_RDC_CONTENT()
ENDFCT
DEFFCT  RW_RDC_FILE RDC_FILE_TO_HD(FILENAME[128] :IN)
ENDFCT
DEFFCT  INT CHECK_MAM_ON_RDC()
ENDFCT
DEFFCT  RDC_FS_STATE GET_RDC_FS_STATE()
ENDFCT
DEFFCT  INT SET_SYSTEM_DATA(OWNER_NAME[16] :IN,OWNER_AXNAME[5] :IN,VAR_NAME[64] :IN,VALUE :IN)
ENDFCT
DEFFCT  INT SET_SYSTEM_DATA_DELAYED(OWNER_NAME[16] :IN,OWNER_AXNAME[5] :IN,VAR_NAME[64] :IN,VALUE :IN)
ENDFCT
DEFFCT  REAL GET_SYSTEM_DATA(OWNER_NAME[16] :IN,OWNER_AXNAME[5] :IN,VAR_NAME[64] :IN,VALUE :IN)
ENDFCT
DEF  ERR_CLEAR (PERR :OUT )
END
DEF  ERR_RAISE (PERR :OUT )
END
DEFFCT  REAL ABS(X :IN)
ENDFCT
DEFFCT  REAL SQRT(X :IN)
ENDFCT
DEFFCT  REAL SIN(X :IN)
ENDFCT
DEFFCT  REAL COS(X :IN)
ENDFCT
DEFFCT  REAL TAN(X :IN)
ENDFCT
DEFFCT  REAL ACOS(X :IN)
ENDFCT
DEFFCT  REAL ATAN2(X :IN,Y :IN)
ENDFCT
DEFFCT  INT MBX_REC(MBX_ID :IN,MESS :OUT)
ENDFCT
DEFFCT  FRAME TOOL_ADJ(X :OUT)
ENDFCT
DEFFCT  FRAME EK(TKRWE :IN,EXKIN :IN,TBAFL :IN)
ENDFCT
DEFFCT  FRAME LK(ROOT :IN,IP_ADDR[24] :IN,OFFSET :IN,EXKIN :IN)
ENDFCT
DEFFCT  E6AXIS INVERSE(TOOLPOS :IN,START_AXIS :IN,STATUS :OUT)
ENDFCT
DEFFCT  INT SET_KRL_BP(MODULE[24] :IN,SNR :IN,COUNT :IN,ACTIVE_MODE_OP :IN,ACTIVE_P_INT :IN,ACTIVE_P_INT_MODE :IN)
ENDFCT
DEFFCT  INT CHG_KRL_BP(HANDLE :IN,NEWLINE :IN)
ENDFCT
DEFFCT  INT CLR_KRL_BP(HANDLE :IN)
ENDFCT
DEFFCT  INT CLR_ALL_KRL_BP()
ENDFCT
DEFFCT  INT ENABLE_KRL_BP(HANDLE :IN,P_INT_MASK :IN)
ENDFCT
DEFFCT  INT DISABLE_KRL_BP(HANDLE :IN)
ENDFCT
DEFFCT  E6POS FORWARD(AXVAL :IN,STATUS :OUT)
ENDFCT
DEFFCT  E6POS INV_POS(POS_VALUES :IN)
ENDFCT
DEFFCT  INT IOCTL(DRVNAME[256] :IN,REQUEST :IN,ARGUMENT :IN)
ENDFCT
DEFFCT  INT CIOCTL(HANDLE :IN,REQUEST :IN,ARGUMENT :IN,PARAM[128] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  INT SYNC()
ENDFCT
DEFFCT  VAR_STATE VARSTATE(VAR_STR[80] :IN)
ENDFCT
DEFFCT  BOOL WSPACEGIVE(SPACEID :IN)
ENDFCT
DEFFCT  BOOL WSPACETAKE(SPACEID :IN,ADVANCE :IN)
ENDFCT
DEF  SYNCCMD (SYNC_T :IN,ID_NAME[64] :IN,COOP_LIST :IN )
END
DEFFCT  RET_C_PSYNC_E CANCELPROGSYNC(CMD :IN,ID_NAME[64] :IN)
ENDFCT
DEFFCT  BOOL REMOTECMD(IP_ADDR[24] :IN,CMD[128] :IN)
ENDFCT
DEFFCT  CHAR REMOTEREAD(IP_ADDR[24] :IN,VARIABLE[128] :IN,ERROR :OUT)
ENDFCT
DEFFCT  INT STRLEN(STRVAR[2047] :IN)
ENDFCT
DEFFCT  INT STRDECLLEN(STRVAR[2047] :OUT)
ENDFCT
DEFFCT  BOOL STRCLEAR(STRVAR[2047] :OUT)
ENDFCT
DEFFCT  INT STRADD(STRDEST[2047] :OUT,STRTOADD[2047] :IN)
ENDFCT
DEFFCT  INT STRFIND(STARTAT :IN,STRVAR[2047] :IN,STRFIND[2047] :IN,CASE_MODE :IN)
ENDFCT
DEFFCT  BOOL STRCOMP(STRCOMP[2047] :IN,STRCOMP2[2047] :IN,CASE_MODE :IN)
ENDFCT
DEFFCT  BOOL STRCOPY(STRDEST[2047] :OUT,STRSOURCE[2047] :IN)
ENDFCT
DEFFCT  BOOL ISMESSAGESET(MESSAGENO :IN)
ENDFCT
DEFFCT  BOOL TIMER_LIMIT(SECONDS :IN)
ENDFCT
DEFFCT  INT SET_KRLMSG(TYPE :IN,MSG :OUT,PAR[3] :OUT,OPT :OUT)
ENDFCT
DEFFCT  BOOL EXISTS_KRLMSG(NHANDLE :IN)
ENDFCT
DEFFCT  BOOL CLEAR_KRLMSG(NHANDLE :IN)
ENDFCT
DEFFCT  INT SET_KRLDLG(MSG :OUT,PAR[3] :OUT,SK[7] :OUT,OPT :OUT)
ENDFCT
DEFFCT  BOOL SET_KRLDLGANSWER(NHANDLE :IN,ANSWERSK :IN)
ENDFCT
DEFFCT  BOOL EXISTS_KRLDLG(NHANDLE :IN,ANSWER :OUT)
ENDFCT
DEFFCT  INT GET_MSGBUFFER(MSGBUF[100] :OUT)
ENDFCT
DEFFCT  BOOL STRTOREAL(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOBOOL(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOINT(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOSTRING(STRVAR[256] :IN,RETVAL[256] :OUT)
ENDFCT
DEFFCT  BOOL STRTOFRAME(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOPOS(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOE3POS(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOE6POS(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOAXIS(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOE3AXIS(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  BOOL STRTOE6AXIS(STRVAR[256] :IN,RETVAL :OUT)
ENDFCT
DEFFCT  VAR_TYPE VARTYPE(VAR_STR[80] :IN)
ENDFCT
DEFFCT  REAL FRAND(MIN_VAL :IN,MAX_VAL :IN)
ENDFCT
DEFFCT  INT GETVARSIZE(MESSAGENO :IN)
ENDFCT
DEFFCT  INT MAXIMIZE_USEDXROBVERS()
ENDFCT
DEFFCT  INT SET_USEDXROBVERS(MAJORVERS :IN,MINORVERS :IN)
ENDFCT
DEFFCT  INT SET_OPT_FILTER(TARGETPOS :IN)
ENDFCT


;the followings are defined in operate_r1.dat 
DEFFCT INT SET_BRAKE_DELAY(AXES :IN,BRAKEDELAY :IN)
ENDFCT
DEFFCT BRAKE_STATE TEST_BRAKE(AXES :IN,FORCE :IN)
ENDFCT
DEFFCT INT GET_AXESMASK(AXESMASKINFO :IN)
ENDFCT
DEFFCT REAL GET_BRAKETEST_TIME(BRAKETEST_TIMEINFO :IN)
ENDFCT
DEFFCT BOOL ROB_STOP(TYPE :IN)
ENDFCT
DEF ROB_STOP_RELEASE ( )
END
DEFFCT VMERROR VECTORMOVEON(STRATEGY :IN,DIRECTION :IN,PARAMETERS :IN)
ENDFCT
DEFFCT VMERROR ADVANCEDVECTORMOVEON(STRATEGY :IN,DIRECTION :IN,PARAMETERS :IN,PARAMETERS_PULL :IN,PARAMETERS_PUSH :IN)
ENDFCT
DEFFCT VMERROR VECTORMOVEOFF(OPTION :IN)
ENDFCT
DEF SUPPRESS_REPOSITIONING ( )
END
DEFFCT VMERROR VECTORMOVEZEROVELOCITY(GAIN :IN,NO_GAIN_DISTANCE :IN,FULL_GAIN_DISTANCE :IN,TIME_DELAY :IN)
ENDFCT
DEF SET_TORQUE_LIMITS (AXIS_NR :IN,VALUES :IN )
END
DEF RESET_TORQUE_LIMITS (AXIS_NR :IN )
END
DEF ACTIVATE_FORCE_MODE (AXIS_NR :IN,TARGET_FORCE :IN,PART_POSITION :IN,CONST_SPEED_USER :IN )
END
DEFFCT MBW_RESULT MOVE_BACKWARD(TARGET :IN,OFFSET :IN)
ENDFCT
DEFFCT MBW_RESULT MOVE_FORWARD(TARGET :IN,OFFSET :IN)
ENDFCT